<UserControl 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:Xvue_MSOT_ViewModels_Imaging="clr-namespace:Xvue.MSOT.ViewModels.Imaging;assembly=Xvue.MSOT.ViewModels" 
    xmlns:local="clr-namespace:ViewMSOT.UIControls"
	xmlns:Xceed_Wpf_Toolkit_Core_Converters="clr-namespace:Xceed.Wpf.Toolkit.Core.Converters;assembly=Xceed.Wpf.Toolkit"
    xmlns:Controls="clr-namespace:Xvue.Framework.Views.WPF.Controls;assembly=Xvue.Framework.Views.WPF"
	x:Class="ViewMSOT.UIControls.ViewImageLayers"
    xmlns:Converters="clr-namespace:Xvue.Framework.Views.WPF.Converters;assembly=Xvue.Framework.Views.WPF"
	mc:Ignorable="d"
	x:Name="UserControl"
	d:DesignWidth="640">
    <UserControl.Resources>
        <Xvue_MSOT_ViewModels_Imaging:ViewModelPreview x:Key="ViewModelPreviewDataSource" d:IsDataSource="True"/>
        <Xceed_Wpf_Toolkit_Core_Converters:InverseBoolConverter x:Key="InverseBoolConverter"/>
        <Converters:InvertedBooleanToVisibleConverter x:Key="InvertedBooleanToVisibleConverter"/>
        <Converters:BooleanToVisibleConverter x:Key="BooleanToVisibleConverter"/>
        <Style x:Key="TabItemLayerHeaderStyle" TargetType="{x:Type TabItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Border x:Name="border" BorderBrush="black" BorderThickness="1,1,1,0">
                            <Grid x:Name="Panel">
                                <ContentPresenter x:Name="ContentSite" ContentSource="Header"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="DarkGray" />
                                <Setter TargetName="Panel" Property="Background" Value="Black" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="False">
                                <Setter TargetName="border" Property="BorderBrush" Value="Black" />
                                <Setter TargetName="Panel" Property="Background" Value="DarkGray" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <DataTemplate x:Key="BackgroundHeaderItemDataTemplate">
            <local:ViewBackgroundControlHeader/>
        </DataTemplate>
        <DataTemplate x:Key="ForegroundHeaderItemDataTemplate">
            <local:ViewForegroundControlHeader/>
        </DataTemplate>
        <Xvue_MSOT_ViewModels_Imaging:ViewImageLayerTemplateSelector x:Key="ImageLayerHeaderItemSelector"
			ForegroundTemplate="{StaticResource ForegroundHeaderItemDataTemplate}"
			BackgroundTemplate="{StaticResource BackgroundHeaderItemDataTemplate}"/>    
        <Style x:Key="UidToggleButtonInvertedExpandStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Width" Value="{DynamicResource UidButtonWidth}"/>
            <Setter Property="Height" Value="{DynamicResource UidButtonHeight}"/>
            <Setter Property="Padding" Value="{DynamicResource UidButtonPadding}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="border" BorderThickness="1" CornerRadius="{DynamicResource UidButtonCornerRadius}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Padding="{TemplateBinding Padding}" Background="#00000000">
                            <Grid>
                                <Path x:Name="path" Data="F1M241,124L237,128L233,124L230,124L237,131L244,124z" Fill="White" Stretch="Uniform" RenderTransformOrigin="0.5,0.5">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="1" ScaleY="-1"/>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Fill" TargetName="path" Value="{DynamicResource UidIconPressedBrush}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#ADADAD"/>
                                <Setter Property="Fill" TargetName="path" Value="{DynamicResource UidIconInvertedDisabledBrush}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="BorderThickness" TargetName="border" Value="2,2,1,1"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                                <Setter Property="Fill" TargetName="path" Value="{DynamicResource UidIconPressedBrush}"/>
                                <Setter Property="RenderTransform" TargetName="path">
                                    <Setter.Value>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TabControlNoContentStyle" TargetType="{x:Type TabControl}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Padding" Value="4,4,4,4"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="{StaticResource TabControlNormalBorderBrush}"/>
            <Setter Property="Background" Value="#F9F9F9"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabControl}">
                        <Grid ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="ColumnDefinition0"/>
                                <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                                <RowDefinition x:Name="RowDefinition1" Height="0"/>
                            </Grid.RowDefinitions>
                            <ScrollViewer HorizontalScrollBarVisibility="Auto" Grid.Column="0" Grid.Row="0" VerticalScrollBarVisibility="Hidden" Margin="0,2,2,0" Style="{DynamicResource SimpleScrollViewerTopScrollBarStyle}">
                                <TabPanel x:Name="HeaderPanel" IsItemsHost="true" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"/>
                            </ScrollViewer>
                            <Border x:Name="ContentPanel" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="{TemplateBinding Background}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                                <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="TabStripPlacement" Value="Bottom">
                                <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="1"/>
                                <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
                                <Setter Property="Margin" TargetName="HeaderPanel" Value="2,0,2,2"/>
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Left">
                                <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
                                <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="ContentPanel" Value="1"/>
                                <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
                                <Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                                <Setter Property="Margin" TargetName="HeaderPanel" Value="2,2,0,2"/>
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Right">
                                <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
                                <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="1"/>
                                <Setter Property="Grid.Column" TargetName="ContentPanel" Value="0"/>
                                <Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
                                <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                                <Setter Property="Margin" TargetName="HeaderPanel" Value="0,2,2,2"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

    <Grid x:Name="LayoutRoot" d:DataContext="{Binding Mode=OneWay, Source={StaticResource ViewModelPreviewDataSource}}">

        <StackPanel x:Name="popupPlacementGrid" VerticalAlignment="Bottom"
                    Width="{Binding ActualWidth, ElementName=UserControl, Mode=OneWay}">
            <TabControl
                    VerticalAlignment="Bottom"
                    HorizontalAlignment="Left"
                    Background="Black"
                    Height="Auto"
                    Visibility="{Binding HideTabSelector, ConverterParameter=Collapsed, Converter={StaticResource InvertedBooleanToVisibleConverter}, ElementName=UserControl}"
			        SelectedItem="{Binding SelectedLayer}" 
			        ItemsSource="{Binding ImageLayers}" 
			        ItemTemplateSelector="{DynamicResource ImageLayerHeaderItemSelector}" 
                    ItemContainerStyle="{DynamicResource TabItemLayerHeaderStyle}" 
                    DataContext="{Binding DataContext, ElementName=UserControl}"
                    Style="{DynamicResource TabControlNoContentStyle}" 
            />
            <Grid x:Name="layerControlsPopup"
                Visibility="{Binding IsChecked, Converter={StaticResource BooleanToVisibleConverter}, ConverterParameter=Collapsed, ElementName=extendControlsToggleButton, Mode=TwoWay}" OpacityMask="Black" Width="{Binding ActualWidth, ElementName=UserControl, Mode=OneWay}" IsVisibleChanged="layerControlsPopup_IsVisibleChanged">
                <local:ViewImageLayerControls AllowAutoScaling="{Binding AllowAutoScaling, ElementName=UserControl}" DataContext="{Binding SelectedLayer}" HorizontalAlignment="Left"/>
            </Grid>
            <Grid Width="{Binding ActualWidth, ElementName=UserControl, Mode=OneWay}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="40"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <ToggleButton x:Name="extendControlsToggleButton" Width="60" ToolTip="Show/hide layer" Height="Auto" Margin="0,0,0,0" Padding="5,5,5,5" Style="{DynamicResource UidToggleButtonInvertedExpandStyle}"/>
                <local:ViewScalingGaugeSimple Grid.Column="1" Padding="3,0,3,3" DataContext="{Binding SelectedLayer}"
			        ImageMax="{Binding LayerMaximumValue, Mode=OneWay}" 
			        ImageMin="{Binding LayerMinimumValue, Mode=OneWay}" 
			        ScaleMax="{Binding ImagingComponent.GainMax, Mode=TwoWay}" 
			        ScaleMin="{Binding ImagingComponent.GainMin, Mode=TwoWay}" 
			        IsEnabled="{Binding ImagingComponent.Visible}"
			        UseLogarithmic="{Binding ImagingComponent.LogarithmicScaling}"/>
            </Grid>
        </StackPanel>
    </Grid>
</UserControl>