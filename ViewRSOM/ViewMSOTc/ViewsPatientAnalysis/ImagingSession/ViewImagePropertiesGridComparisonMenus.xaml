<UserControl
    xmlns:Controls="clr-namespace:Xvue.Framework.Views.WPF.Controls;assembly=Xvue.Framework.Views.WPF" 
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:Imaging="clr-namespace:Xvue.MSOT.EnumDescriptions.Imaging;assembly=Xvue.MSOT" 
    xmlns:ServicesImaging="clr-namespace:Xvue.MSOT.Services.Imaging;assembly=Xvue.MSOT" 
    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit" 
    xmlns:Converters="clr-namespace:Xvue.Framework.Views.WPF.Converters;assembly=Xvue.Framework.Views.WPF" 
    xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
    xmlns:UIControls="clr-namespace:ViewMSOT.UIControls;assembly=ViewMSOT.UIControls"
    xmlns:Xvue_MSOT_ViewModels_ProjectManager_ImagingSession="clr-namespace:Xvue.MSOT.ViewModels.ProjectManager.ImagingSession;assembly=Xvue.MSOT.ViewModels"
    xmlns:local="clr-namespace:ViewMSOTc"
	mc:Ignorable="d"
	x:Class="ViewMSOTc.ViewImagePropertiesGridComparisonMenus"
	x:Name="UserControl">

    <UserControl.Resources>
        <Converters:InvertedBooleanToVisibleConverter x:Key="InvertedBooleanToVisibleConverter"/>
        <Imaging:EnumConversionGridStyle x:Key="EnumConversionGridStyleDataSource" d:IsDataSource="True"/>
        <Imaging:EnumConversionGridStyle x:Key="EnumConversionGridStyle"/>
        <Converters:EnumToBooleanConverter x:Key="EnumToBooleanConverter"/>
        <Converters:BooleanToColorConverter x:Key="BooleanToColorConverter"/>
        <Xvue_MSOT_ViewModels_ProjectManager_ImagingSession:ViewModelImagingSuperSession x:Key="ViewModelImagingSuperSessionDataSource" d:IsDataSource="True"/>
    </UserControl.Resources>

    <Grid x:Name="LayoutRoot" d:DataContext="{Binding Source={StaticResource ViewModelImagingSuperSessionDataSource}}">
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <Grid IsEnabled="False">
            <ToggleButton x:Name="speedOfSoundToggleButton" Content="{StaticResource IconFocus}" ToolTip="Focus" Margin="4" Style="{DynamicResource UidToggleButtonInvertedStyle}"/>
        </Grid>

        <Grid Grid.Row="1" IsEnabled="False">
            <ToggleButton x:Name="depthCorrectionToggleButton" Content="{StaticResource IconDepthCorrection}" ToolTip="Depth correction" Margin="4" Style="{DynamicResource UidToggleButtonInvertedStyle}"/>
        </Grid>

        <Grid Grid.Row="2">
            <UIControls:ViewRulerControlImagingSuperSessionToggleButton x:Name="rulerToggleButton" Margin="4" ToolTip="Distance" />
        </Grid>

        <Grid Grid.Row="3" Visibility="{Binding Has2DSession, ConverterParameter=Collapsed, Converter={StaticResource BooleanToVisibleConverter}, Mode=OneWay}">
            <Menu Background="{x:Null}" Margin="4" Grid.Row="3">
                <MenuItem x:Name="roiDesignMenuItem" Template="{DynamicResource MenuItemInvertedVectorIconControlTemplate}" Header="{DynamicResource IconDrawROI}" ToolTip="Region of interest">
                    <MenuItem Style="{DynamicResource MenuItemCustomContentStyle}">
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <ToggleButton ToolTip="Rectangular ROI" Content="{DynamicResource IconDrawRectangle}" IsChecked="{Binding IsRoiRectangleShape}" Style="{DynamicResource UidToggleButtonStyle}" Click="roiSubMenuButton_Click"/>
                                <ToggleButton ToolTip="Round ROI" Content="{DynamicResource IconDrawCircle}" IsChecked="{Binding IsRoiCircleShape}" Style="{DynamicResource UidToggleButtonStyle}" Click="roiSubMenuButton_Click"/>
                                <ToggleButton ToolTip="Ellipse ROI" Content="{DynamicResource IconDrawElipse}" IsChecked="{Binding IsRoiEllipseShape}" Style="{DynamicResource UidToggleButtonStyle}" Click="roiSubMenuButton_Click"/>
                                <ToggleButton ToolTip="Polygon ROI" Content="{DynamicResource IconDrawPolygon}" IsChecked="{Binding IsRoiPolygonShape}" Style="{DynamicResource UidToggleButtonStyle}" Click="roiSubMenuButton_Click"/>
                            </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem Header="ROI appearance" Style="{DynamicResource UidMenuItemStyle}">
                        <MenuItem Header="Outline ROIs" IsChecked="{Binding SelectedROIsStyle, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static ServicesImaging:ROIsViewStyle.Outline}}" IsCheckable="True" Style="{DynamicResource UidMenuItemStyle}"/>
                        <MenuItem Header="Fill ROIs" IsChecked="{Binding SelectedROIsStyle, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static ServicesImaging:ROIsViewStyle.Fill}}" IsCheckable="True" Style="{DynamicResource UidMenuItemStyle}"/>
                        <MenuItem Header="Hide ROIs" IsChecked="{Binding SelectedROIsStyle, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static ServicesImaging:ROIsViewStyle.None}}" IsCheckable="True" Style="{DynamicResource UidMenuItemStyle}"/>
                    </MenuItem>
                </MenuItem>
            </Menu>
        </Grid>

        <Menu x:Name="imageDisplayOptionsMenu" Background="{x:Null}" Margin="4" Grid.Row="4">
            <MenuItem x:Name="imageDisplayOptionsMenuItem" Template="{DynamicResource MenuItemInvertedVectorIconControlTemplate}" Header="{DynamicResource IconImageControlGear}" ToolTip="Image display controls">
                <MenuItem x:Name="menuItem" Header="Select images" Style="{DynamicResource UidMenuItemStyle}" IsEnabled="False" />
                <MenuItem Header="Grid overlay" Style="{DynamicResource UidMenuItemStyle}" IsEnabled="False">
                    <MenuItem Style="{DynamicResource MenuItemCustomContentStyle}"/>
                </MenuItem>
                <MenuItem Header="RGB mixing" Style="{DynamicResource UidMenuItemStyle}" IsEnabled="False"/>
                <MenuItem Header="Copy properties" Style="{DynamicResource UidMenuItemStyle}">
                    <MenuItem Header="to another scan" Style="{DynamicResource UidMenuItemStyle}" IsCheckable="True" IsChecked="{Binding PendingPrepareCopyPreset, Mode=TwoWay}"/>
                    <MenuItem Header="to all scans" Style="{DynamicResource UidMenuItemStyle}" IsCheckable="True" IsChecked="{Binding PendingCopyPresetToAll, Mode=TwoWay}"/>
                </MenuItem>
                <MenuItem Header="Reset properties" Style="{DynamicResource UidMenuItemStyle}" IsEnabled="False"/>
            </MenuItem>
        </Menu>

        <Menu x:Name="imagePlanes3DDisplayOptionsMenu" Grid.Row="5" Background="{x:Null}" Margin="4" IsEnabled="False" Visibility="{Binding Has3DSession, ConverterParameter=Collapsed, Converter={StaticResource BooleanToVisibleConverter}, Mode=OneWay}">
            <MenuItem Template="{DynamicResource MenuItemInvertedVectorIconControlTemplate}" Header="{DynamicResource Icon3DImageControlCube}" ToolTip="3D display options" IsEnabled="False"/>
        </Menu>
    </Grid>
</UserControl>