<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ViewRSOM"
             x:Name="UserControl" 
             
             xmlns:Converters="clr-namespace:ViewRSOM.Converters" 
             
             x:Class="ViewRSOM.ViewPatientOverview"
             mc:Ignorable="d" d:DesignWidth="1444" d:DesignHeight="800" Loaded="UserControl_Loaded" IsVisibleChanged="UserControl_IsVisibleChanged">
    <UserControl.Resources>
        <!--<Converters:BooleanToVisibleConverter x:Key="BooleanToVisibleConverter"/>-->
        <!--<Converters:InvertedBooleanToVisibleConverter x:Key="InvertedBooleanToVisibleConverter"/>-->
        <!--<ProjectManager:ViewModelProjectManager x:Key="ViewModelProjectManagerDataSource" d:IsDataSource="True"/>-->
        <CollectionViewSource x:Key='groupableSuperSessionSource' Source="{Binding ActiveStudy.ImagingSuperSessions}"/>
        <DataTemplate x:Key="ComparisonAnalysisTemplateDataTemplate">
            <!--<local:ViewPatientOverviewAnalysisDetails/>-->
        </DataTemplate>
        <DataTemplate x:Key="SnapshotDataTemplate">
            <!--<local:ViewPatientOverviewScanDetails/>-->
        </DataTemplate>
        <!--<ProjectManager_ImagingSession:ViewSuperSessionDetailsTemplateSelector x:Key="SuperSessionDetailsTemplateSelector"
    		ComparisonAnalysisTemplate="{StaticResource ComparisonAnalysisTemplateDataTemplate}"
    		SnapshotTemplate="{StaticResource SnapshotDataTemplate}"/>-->
        <SolidColorBrush x:Key="Expander.MouseOver.Circle.Stroke" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Expander.MouseOver.Circle.Fill" Color="Transparent"/>
        <SolidColorBrush x:Key="Expander.MouseOver.Arrow.Stroke" Color="#222"/>
        <SolidColorBrush x:Key="Expander.Pressed.Circle.Stroke" Color="#FF526C7B"/>
        <SolidColorBrush x:Key="Expander.Pressed.Circle.Fill" Color="Transparent"/>
        <SolidColorBrush x:Key="Expander.Pressed.Arrow.Stroke" Color="#FF003366"/>
        <SolidColorBrush x:Key="Expander.Disabled.Circle.Stroke" Color="DarkGray"/>
        <SolidColorBrush x:Key="Expander.Disabled.Circle.Fill" Color="Transparent"/>
        <SolidColorBrush x:Key="Expander.Disabled.Arrow.Stroke" Color="#666"/>
        <SolidColorBrush x:Key="Expander.Static.Circle.Fill" Color="Transparent"/>
        <SolidColorBrush x:Key="Expander.Static.Circle.Stroke" Color="DarkGray"/>
        <SolidColorBrush x:Key="Expander.Static.Arrow.Stroke" Color="#666"/>
        <Style x:Key="ExpanderHeaderFocusVisual">
        	<Setter Property="Control.Template">
        		<Setter.Value>
        			<ControlTemplate>
        				<Border>
        					<Rectangle Margin="0" SnapsToDevicePixels="true" Stroke="Black" StrokeThickness="1" StrokeDashArray="1 2"/>
        				</Border>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        
                <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type ToggleButton}">
        				<Border Padding="{TemplateBinding Padding}">
        					<Grid Background="Transparent" SnapsToDevicePixels="False">
        						<Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="19"/>
                                    <ColumnDefinition Width="*"/>
        						</Grid.ColumnDefinitions>
        						<Ellipse x:Name="circle" Grid.Column="0" Fill="Transparent" HorizontalAlignment="Center" Height="19" Stroke="Transparent" VerticalAlignment="Center" Width="19" Visibility="Collapsed"/>
        						<Path x:Name="arrow" Grid.Column="0" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="{StaticResource Expander.Static.Arrow.Stroke}" StrokeThickness="2" VerticalAlignment="Center" Stretch="UniformToFill"/>
        						<ContentPresenter Grid.Column="1" HorizontalAlignment="Stretch" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
        					</Grid>
        				</Border>
        				<ControlTemplate.Triggers>
        					<Trigger Property="IsChecked" Value="true">
        						<Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
        					</Trigger>
        					<Trigger Property="IsMouseOver" Value="true">
        						<Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Stroke}"/>
        						<Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Fill}"/>
        						<Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
        					</Trigger>
        					<Trigger Property="IsPressed" Value="true">
        						<Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Stroke}"/>
        						<Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
        						<Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Fill}"/>
        						<Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Pressed.Arrow.Stroke}"/>
        					</Trigger>
        					<Trigger Property="IsEnabled" Value="false">
        						<Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Stroke}"/>
        						<Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Fill}"/>
        						<Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
        					</Trigger>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <Style x:Key="ExpanderStyle1" TargetType="{x:Type Expander}">
        	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        	<Setter Property="Background" Value="Transparent"/>
        	<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        	<Setter Property="VerticalContentAlignment" Value="Stretch"/>
        	<Setter Property="BorderBrush" Value="Transparent"/>
        	<Setter Property="BorderThickness" Value="1"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type Expander}">
        				<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="3" SnapsToDevicePixels="true">
        					<DockPanel>
        						<ToggleButton x:Name="HeaderSite" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" Content="{TemplateBinding Header}" DockPanel.Dock="Top" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}" FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" MinWidth="0" MinHeight="0" Padding="{TemplateBinding Padding}" Style="{StaticResource ExpanderDownHeaderStyle}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
        						<ContentPresenter x:Name="ExpandSite" DockPanel.Dock="Bottom" Focusable="false" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        					</DockPanel>
        				</Border>
        				<ControlTemplate.Triggers>
        					<Trigger Property="IsExpanded" Value="true">
        						<Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
        					</Trigger>
        					<Trigger Property="IsEnabled" Value="false">
        						<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
        					</Trigger>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <SolidColorBrush x:Key="ListBorder" Color="#828790"/>
        <Style x:Key="ListBoxStyle3" TargetType="{x:Type ListBox}">
            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalOnly"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBox}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="1" SnapsToDevicePixels="true">
                            <ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}">
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsGrouping" Value="false">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TypeGroupStyle" TargetType="{x:Type GroupItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GroupItem}">
                        <Expander IsExpanded="True" Style="{StaticResource ExpanderStyle1}" HorizontalContentAlignment="Stretch">
                            <Expander.Header>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Label HorizontalAlignment="Left" Content="{Binding Items[0].TypeFriendlyName}" FontWeight="Bold" Margin="2"/>
                                    <Separator Grid.Column="1" Margin="5" BorderThickness="2" Height="4" BorderBrush="Black"/>
                                </Grid>
                            </Expander.Header>
                            <ItemsPresenter/>
                        </Expander>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="GroupBox">
            <Setter Property="Margin" Value="25,1,5,5"/>
            <Setter Property="Background" Value="#44000000"/>
            <Setter Property="HeaderTemplate">                    
                <Setter.Value>
                    <DataTemplate>
                        <TextBlock Text="{Binding}" FontWeight="Bold" Foreground="White" Background="Black"/>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
            
        
        </Style>
        <Style x:Key="DateGroupStyle" TargetType="{x:Type GroupItem}">
            <Setter Property="Margin" Value="0,0,0,5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GroupItem}">
                        <Expander IsExpanded="True" Style="{StaticResource ExpanderStyle1}" HorizontalContentAlignment="Stretch">
                            <Expander.Header>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Label HorizontalAlignment="Left" Content="{Binding Items[0].DatePeriodFriendlyName}" FontWeight="Bold" Margin="2"/>
                                    <Separator Grid.Column="1" Margin="5" BorderThickness="2" Height="4" BorderBrush="Black"/>
                                </Grid>
                            </Expander.Header>
                            <ItemsPresenter/>
                        </Expander>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid Background="Transparent" >
        <Grid.RowDefinitions>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="0"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <!--<local:ViewPatientInformationExpander x:Name="patientInformationControl" Panel.ZIndex="1" VerticalAlignment="Stretch" Grid.Row="0" Grid.ColumnSpan="2" HorizontalAlignment="Left" Margin="4,10,4,0" DataContext="{Binding PatientsManager.ActivePatient}"/>-->
        <Grid Grid.Column="1" Grid.Row="0" Margin="2,10,10,0" Background="{DynamicResource iTheraWaveBrush}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition MinWidth="1024" Width="1.0*"/>
                <ColumnDefinition Width="Auto"/>
                
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Background="Transparent">
                <StackPanel Orientation="Horizontal">
                    <!--<Button Content="{StaticResource IconTrashCan}" Margin="2" Style="{DynamicResource UidButtonStyle}" Command="{Binding ActiveStudy.CommandDeleteImagingSuperSessionSimple, Mode=OneWay}" ToolTip="Delete"/>-->
                    <Menu x:Name="groupMenu" Background="{x:Null}" VerticalAlignment="Center"/>
                </StackPanel>
            </StackPanel>

            <StackPanel Margin="8" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center"/>
            <ScrollViewer Grid.Row="1">
                <StackPanel  Orientation="Vertical" x:Name="mainListStackPanel" Margin="5,5,5,5"   Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" CanVerticallyScroll="True" Background="Transparent"/>
            </ScrollViewer>
            <!--
            <ListBox x:Name="mainListBox" ScrollViewer.HorizontalScrollBarVisibility="Disabled" Background="Transparent" Margin="4" Grid.Row="1" 
				BorderThickness="0" ItemsSource="{Binding Source={StaticResource groupableSuperSessionSource}}" SelectedItem="{Binding ActiveStudy.SelectedSuperSession, Mode=TwoWay}" SelectionMode="Single" DataContextChanged="mainListBox_DataContextChanged" ManipulationBoundaryFeedback="mainListBox_ManipulationBoundaryFeedback" TouchEnter="mainListBox_TouchEnter" TouchLeave="mainListBox_TouchLeave" TouchMove="mainListBox_TouchMove" Style="{DynamicResource ListBoxStyle3}">
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem">
                        <EventSetter Event="MouseDoubleClick" Handler="mainListBox_MouseDoubleClick"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" Margin="{DynamicResource UidComboBoxItemContentMargin}">
                                        <Grid x:Name="sessionGrid" Background="White" Width="{Binding Value, ElementName=sizeSlider}" Margin="5">
                                            <Grid.Style>
                                                <Style TargetType="Grid">
                                                    <Style.Triggers>
                                                        <Trigger Property="IsEnabled" Value="false">
                                                            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Grid.Style>
                                            <Grid.RowDefinitions>
                                                <RowDefinition/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <Border BorderBrush="Black" BorderThickness="0" Height="{Binding Value, ElementName=sizeSlider}">
                                                <ItemsControl x:Name="itemsControl" ItemsSource="{Binding ImagingSessions}" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Margin="5">
                                                    <ItemsControl.ItemsPanel>
                                                        <ItemsPanelTemplate>
                                                            <UniformGrid IsItemsHost="True">
                                                                <UniformGrid.Style>
                                                                    <Style TargetType="UniformGrid">
                                                                        <Style.Triggers>
                                                                            <DataTrigger Binding="{Binding ImagingSessionsCount}" Value="1">
                                                                                <Setter Property="Rows" Value="1"/>
                                                                                <Setter Property="Columns" Value="2"/>
                                                                            </DataTrigger>
                                                                            <DataTrigger Binding="{Binding ImagingSessionsCount}" Value="2">
                                                                                <Setter Property="Rows" Value="1"/>
                                                                                <Setter Property="Columns" Value="2"/>
                                                                            </DataTrigger>
                                                                            <DataTrigger Binding="{Binding ImagingSessionsCount}" Value="3">
                                                                                <Setter Property="Rows" Value="2"/>
                                                                                <Setter Property="Columns" Value="2"/>
                                                                            </DataTrigger>
                                                                            <DataTrigger Binding="{Binding ImagingSessionsCount}" Value="4">
                                                                                <Setter Property="Rows" Value="2"/>
                                                                                <Setter Property="Columns" Value="2"/>
                                                                            </DataTrigger>
                                                                            <DataTrigger Binding="{Binding ImagingSessionsCount}" Value="5">
                                                                                <Setter Property="Rows" Value="2"/>
                                                                                <Setter Property="Columns" Value="3"/>
                                                                            </DataTrigger>
                                                                            <DataTrigger Binding="{Binding ImagingSessionsCount}" Value="6">
                                                                                <Setter Property="Rows" Value="2"/>
                                                                                <Setter Property="Columns" Value="3"/>
                                                                            </DataTrigger>
                                                                            <DataTrigger Binding="{Binding VisualizationAndAnalysisType}" Value="kzf">
                                                                                <Setter Property="Rows" Value="1"/>
                                                                                <Setter Property="Columns" Value="1"/>
                                                                            </DataTrigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </UniformGrid.Style>
                                                            </UniformGrid>
                                                        </ItemsPanelTemplate>
                                                    </ItemsControl.ItemsPanel>
                                                    <ItemsControl.ItemTemplate>
                                                        <DataTemplate>
                                                            <Grid>
                                                                <Grid Margin="5" Visibility="Visible">
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition Width="0.556*"/>
                                                                        <ColumnDefinition Width="0.444*"/>
                                                                    </Grid.ColumnDefinitions>
                                                                    <Grid.RowDefinitions>
                                                                        <RowDefinition Height="0.8*"/>
                                                                        <RowDefinition Height="0.2*"/>
                                                                    </Grid.RowDefinitions>
                                                                    <Image x:Name="previewImage" Source="{Binding Snapshot, Mode=OneWay}" Grid.ColumnSpan="2" Grid.RowSpan="2" VerticalAlignment="Bottom" HorizontalAlignment="Right"/>
                                                                    <Grid Grid.Row="1" Grid.Column="1" Background="Transparent" VerticalAlignment="Bottom">
                                                                        <Viewbox Stretch="Uniform" HorizontalAlignment="Right">
                                                                            <local:ViewThumbnailLength Seconds="{Binding ScanSeconds, Mode=OneWay}" />-->
                                                                       <!-- </Viewbox>
                                                                    </Grid>
                                                                </Grid>-->
                                                                <!--<Grid Margin="5" Visibility="{Binding IsEmptyImagingSession, ConverterParameter=Collapsed, Converter={StaticResource BooleanToVisibleConverter}}">
                                                        <TextBlock Foreground="White" Text="Nothing is loaded." VerticalAlignment="Center" HorizontalAlignment="Center" Background="Black" Margin="2,0"></TextBlock>

                                                </Grid>-->
                                                 <!--           </Grid>
                                                        </DataTemplate>
                                                    </ItemsControl.ItemTemplate>
                                                </ItemsControl>
                                                <Canvas Height="100" Width="100" Background="WhiteSmoke"/>-->
                                                <!--<Image x:Name="previewImage" Source="{Binding PreviewImage, Mode=OneWay}"/>-->
                                         <!--   </Border>
                                            <Label HorizontalAlignment="Center" Content="{Binding Name}" Grid.Row="1"/>
                                            <Label HorizontalAlignment="Center" Content="{Binding CreationTimeLocaleString}" Grid.Row="2"/>
                                        </Grid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSelected" Value="true">
                                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsSelected" Value="true"/>
                                                <Condition Property="Selector.IsSelectionActive" Value="false"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                                        </MultiTrigger>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListBox.ItemContainerStyle>
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel Orientation="Horizontal" IsItemsHost="True"/>
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
            </ListBox>
-->
            <!--<ContentPresenter Grid.Row="1" Grid.Column="2" HorizontalAlignment="Stretch" ContentTemplateSelector="{DynamicResource SuperSessionDetailsTemplateSelector}" Content="{Binding ActiveStudy.SelectedSuperSession}"/>-->
        </Grid>
    </Grid>
</UserControl>
