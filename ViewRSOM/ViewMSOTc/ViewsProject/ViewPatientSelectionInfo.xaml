<UserControl x:Name="userControl" x:Class="ViewRSOM.ViewPatientSelectionInfo"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             
             mc:Ignorable="d" DataContextChanged="UserControl_DataContextChanged">
    <UserControl.Resources>
        <!--<Xvue_MSOT_ViewModels_ProjectManager:ViewModelPatient x:Key="ViewModelPatientDataSource" d:IsDataSource="True"/>-->
    </UserControl.Resources>
    <Grid>
        <Button ToolTip="Select patient" Height="Auto" Width="Auto" Margin="2,0,2,0" Click="selectPatientButtonClick">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Width" Value="{StaticResource UidButtonWidth}"/>
                    <Setter Property="Height" Value="{StaticResource UidButtonHeight}"/>
                    <Setter Property="Padding" Value="{DynamicResource UidButtonPadding}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border x:Name="border" BorderThickness="{DynamicResource UidButtonBorderThickness}" Width="Auto" Height="{TemplateBinding Height}" CornerRadius="{DynamicResource UidButtonCornerRadius}" Background="#00000000">
                                    <StackPanel Orientation="Horizontal">
                                        <Grid Width="{TemplateBinding Width}" Margin="{TemplateBinding Padding}">
                                            <Path x:Name="path"  Fill="White" Stretch="Uniform" Data="{Binding Mode=OneWay, Source={StaticResource IconSelectPatient}}"/>
                                        </Grid>
                                        <Grid MaxWidth="300" Width="Auto" Visibility="{Binding IsPatientInfoVisible, ElementName=userControl}">
                                            <Grid.RowDefinitions>
                                                <RowDefinition/>
                                                <RowDefinition/>
                                            </Grid.RowDefinitions>
                                            <StackPanel Orientation="Horizontal">
                                                <Label x:Name="fullNameLabel" Content="{Binding FullName}" Foreground="White" HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" Padding="1"/>
                                                <Label x:Name="birthDateLabel" Content="{Binding BirthDateAsStringInBrackets}" Foreground="White" HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" Padding="1" Margin="5,0,0,0"/>
                                            </StackPanel>
                                            <StackPanel Grid.Row="1" Orientation="Horizontal">
                                                <Label x:Name="idLabel" Content="ID:" Foreground="White" HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" Padding="1"/>
                                                <Label x:Name="iddLabel" Content="{Binding Id}" Foreground="White" HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" Padding="1"/>
                                            </StackPanel>
                                        </Grid>
                                    </StackPanel>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsFocused" Value="True"/>
                                    <Trigger Property="IsDefaulted" Value="True"/>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="BorderBrush" TargetName="border" Value="White"/>
                                        <Setter Property="Fill" TargetName="path" Value="{DynamicResource UidInvertedButtonPathPressedBrush}"/>
                                        <Setter Property="Foreground" TargetName="fullNameLabel" Value="{DynamicResource UidInvertedButtonPathPressedBrush}"/>
                                        <Setter Property="Foreground" TargetName="birthDateLabel" Value="{DynamicResource UidInvertedButtonPathPressedBrush}"/>
                                        <Setter Property="Foreground" TargetName="idLabel" Value="{DynamicResource UidInvertedButtonPathPressedBrush}"/>
                                        <Setter Property="Foreground" TargetName="iddLabel" Value="{DynamicResource UidInvertedButtonPathPressedBrush}"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="BorderBrush" TargetName="border" Value="White"/>
                                        <Setter Property="BorderThickness" TargetName="border" Value="{DynamicResource UidButtonPressedBorderThickness}"/>
                                        <Setter Property="Fill" TargetName="path" Value="{DynamicResource UidInvertedButtonPathPressedBrush}"/>
                                        <Setter Property="Foreground" TargetName="fullNameLabel" Value="{DynamicResource UidInvertedButtonPathPressedBrush}"/>
                                        <Setter Property="Foreground" TargetName="birthDateLabel" Value="{DynamicResource UidInvertedButtonPathPressedBrush}"/>
                                        <Setter Property="Foreground" TargetName="idLabel" Value="{DynamicResource UidInvertedButtonPathPressedBrush}"/>
                                        <Setter Property="Foreground" TargetName="iddLabel" Value="{DynamicResource UidInvertedButtonPathPressedBrush}"/>
                                        <Setter Property="Background" TargetName="border" Value="{DynamicResource UidInvertedButtonBackgroundPressedBrush}"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="BorderThickness" TargetName="border" Value="{DynamicResource UidButtonBorderThickness}"/>
                                        <Setter Property="Fill" TargetName="path" Value="{DynamicResource UidIconInvertedDisabledBrush}"/>
                                        <Setter Property="Foreground" TargetName="fullNameLabel" Value="{DynamicResource UidIconInvertedDisabledBrush}"/>
                                        <Setter Property="Foreground" TargetName="birthDateLabel" Value="{DynamicResource UidIconInvertedDisabledBrush}"/>
                                        <Setter Property="Foreground" TargetName="idLabel" Value="{DynamicResource UidIconInvertedDisabledBrush}"/>
                                        <Setter Property="Foreground" TargetName="iddLabel" Value="{DynamicResource UidIconInvertedDisabledBrush}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Style>
        </Button>
    </Grid>
</UserControl>
